// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.


// Generated by Quartus Prime Version 20.1 (Build Build 711 06/05/2020)
// Created on Thu Jul  7 18:30:30 2022

DATAMEM DATAMEM_inst
(
	.DATAMEM_Clk(DATAMEM_Clk_sig) ,	// input  DATAMEM_Clk_sig
	.DATAMEM_We(DATAMEM_We_sig) ,	// input  DATAMEM_We_sig
	.DATAMEM_Re(DATAMEM_Re_sig) ,	// input  DATAMEM_Re_sig
	.DATAMEM_Byteenable(DATAMEM_Byteenable_sig) ,	// input [3:0] DATAMEM_Byteenable_sig
	.DATAMEM_Address(DATAMEM_Address_sig) ,	// input [31:0] DATAMEM_Address_sig
	.DATAMEM_Data_In(DATAMEM_Data_In_sig) ,	// input [31:0] DATAMEM_Data_In_sig
	.DATAMEM_Data_Out(DATAMEM_Data_Out_sig) 	// output [31:0] DATAMEM_Data_Out_sig
);

defparam DATAMEM_inst.MEM_SIZE = 1024;
//defparam DATAMEM_inst.BINPATH = "";
